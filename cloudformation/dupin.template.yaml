AWSTemplateFormatVersion: 2010-09-09
Description: Set up Dupin in EC2 and schedule its execution

Parameters:
  AMI:
    Description: "AMI for the underlying instance: https://cloud-images.ubuntu.com/locator/ec2/ filter on region, hvm:ebs-ssd and xenial"
    Type: AWS::EC2::Image::Id
  VpcId:
    Description: The VPC in which Dupin will run
    Type: AWS::EC2::VPC::Id
  Subnet:
    Description: The subnets where the instance can run
    Type: AWS::EC2::Subnet::Id
  KeyName:
    Description: An ssh keypair to put on the nginx instance
    Type: AWS::EC2::KeyPair::KeyName
  DiskSize:
    Description: Disk size for storing Dupin's data in GB (make sure it can check out all your repos without filling up)
    Type: Number
    Default: 20
  SSHAccessCidr:
    Description: A CIDR from which SSH access to the nginx instance is allowed
    Type: String
    AllowedPattern: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$
    ConstraintDescription: Parameter should be a CIDR block e.g. "1.2.3.4/32"
  ConfigBucket:
    Description: Name of the S3 bucket that contains Dupin's config
    Type: String
  ConfigPath:
    Description: Location of Dupin's config in the specified S3 bucket (e.g /path/to/config)
    Type: String

Mappings:
  Tags:
    App:
      Value: dupin
    Stack:
      Value: security

Resources:
  DupinInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Dupin instance security group
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp:
          Ref: SSHAccessCidr
      SecurityGroupEgress:
      # allow dupin to send emails over SMTP
      - IpProtocol: tcp
        FromPort: 25
        ToPort: 25
        CidrIp: 0.0.0.0/0
      # allow instance to make http requests for init
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: App
        Value: !FindInMap [ Tags, App, Value ]
      - Key: Stack
        Value: !FindInMap [ Tags, Stack, Value ]

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: dupin-instance-policy
        PolicyDocument:
          Statement:
          # grant read access to config file in S3
          - Effect: Allow
            Resource:
              !Sub "arn:aws:s3:::${ConfigBucket}"
            Action:
            - s3:ListBucket
          - Effect: Allow
            Resource:
              !Sub "arn:aws:s3:::${ConfigBucket}${ConfigPath}"
            Action:
            - s3:GetObject
      Path: /

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - Ref: InstanceRole

  DupinInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Ref: AMI
      # large repositories are very processor / memory intensive
      InstanceType: t2.medium
      KeyName:
        Ref: KeyName
      IamInstanceProfile:
        Ref: InstanceProfile
      NetworkInterfaces:
      - DeviceIndex: 0
        AssociatePublicIpAddress: true
        SubnetId:
          Ref: Subnet
        GroupSet:
        - Ref: DupinInstanceSecurityGroup
      BlockDeviceMappings:
      - DeviceName: /dev/sdm
        Ebs:
          VolumeType: gp2
          DeleteOnTermination: true
          VolumeSize: !Ref DiskSize
          Encrypted: true
      Tags:
      - Key: Name
        Value: !FindInMap [ Tags, App, Value ]
      - Key: App
        Value: !FindInMap [ Tags, App, Value ]
      - Key: Stack
        Value: !FindInMap [ Tags, Stack, Value ]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -ev
          apt-get update -y
          # non-interactive upgrade
          DEBIAN_FRONTEND=noninteractive apt-get -y -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" upgrade

          # setup dupin's storage
          mkdir /dupin
          mkfs -t ext4 /dev/xvdm
          echo "/dev/xvdm  /dupin  ext4  defaults  0  0" >> /etc/fstab
          mount -a

          # dupin's dependencies (building crypto libraries requires dev packages)
          apt-get install -y git python-pip python-dev libssl-dev libffi-dev
          pip install awscli
          pip install virtualenv

          # setup dupin directories
          virtualenv /dupin/venv
          /dupin/venv/bin/pip install --upgrade pip

          # fetch dupin
          git clone https://github.com/guardian/dupin.git /dupin/src

          # install dupin and requirements
          /dupin/venv/bin/pip install /dupin/src

          # fetch config
          aws s3 cp s3://${ConfigBucket}${ConfigPath} /dupin/config

          chown -R ubuntu:ubuntu /dupin

          # run dupin setup
          su -c "/dupin/venv/bin/dupin --root /dupin setup" ubuntu

          # scan org's repos every weekday (Mon-Fri) at 09:30
          cat <<SCANREPOS > /etc/cron.d/dupin-scan-repositories
          30 9 * * 1-5  ubuntu  /dupin/venv/bin/dupin --root /dupin auto-scan-all --notify > /dupin/scan-lastrun.log 2>&1
          SCANREPOS

          # updates the organisation's repositories every Monday at 08:00
          cat <<UPDATEREPOLIST > /etc/cron.d/dupin-update-org-repos
          0 8 * * 1  ubuntu  /dupin/venv/bin/dupin --root /dupin update-repos > /dupin/update-lastrun.log 2>&1
          UPDATEREPOLIST

          # initial update of organisation repos
          su -c "/dupin/venv/bin/dupin --root /dupin update-repos > /dupin/update-lastrun.log 2>&1" ubuntu

          # enable automatic patching of instance
          cat <<UPDATES > /etc/apt/apt.conf.d/20auto-upgrades
          APT::Periodic::Update-Package-Lists "1";
          APT::Periodic::Unattended-Upgrade "1";
          UPDATES
          /etc/init.d/unattended-upgrades restart

Outputs:
  DupinInstance:
    Value:
      !GetAtt DupinInstance.PublicDnsName
